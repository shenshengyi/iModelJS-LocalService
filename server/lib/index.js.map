{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;AAMA,gEAAuD;AACvD,wEAA6D;AAC7D,8DAKkC;AAIlC,4HAAyH;AASzH,SAAgB,gBAAgB;IAC9B,OAAO;QACL,wCAAsB;QACtB,wCAAsB;QACtB,mDAAwB;QACxB,4CAA0B;KAC3B,CAAC;AACJ,CAAC;AAPD,4CAOC;AACD,CAAC,KAAK,IAAI,EAAE;IACV,IAAI;QAEF,MAAM,6BAAU,CAAC,OAAO,EAAE,CAAC;QAG3B,mCAAY,CAAC,UAAU,EAAE,CAAC;QAG1B,IAAI,IAA8C,CAAC;QACnD,IAAI,GAAG,CAAC,2CAAa,qBAAqB,EAAC,CAAC,CAAC,OAAO,CAAC;QAGrD,MAAM,IAAI,GAAG,gBAAgB,EAAE,CAAC;QAGhC,IAAI,CAAC,IAAI,CAAC,CAAC;KACZ;IAAC,OAAO,KAAK,EAAE;QAEd,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC;KACtB;AACH,CAAC,CAAC,EAAE,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n * Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n * See LICENSE.md in the project root for license terms and full copyright notice.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { app as electron } from \"electron\";\r\nimport { Logger, LogLevel } from \"@bentley/bentleyjs-core\";\r\nimport { IModelHost } from \"@bentley/imodeljs-backend\";\r\nimport { Presentation } from \"@bentley/presentation-backend\";\r\nimport {\r\n  IModelTileRpcInterface,\r\n  RpcInterfaceDefinition,\r\n  IModelReadRpcInterface,\r\n  SnapshotIModelRpcInterface,\r\n} from \"@bentley/imodeljs-common\";\r\n\r\n// import { getSupportedRpcs } from \"../common/rpcs\";\r\n// import { AppLoggerCategory } from \"../common/LoggerCategory\";\r\nimport { PresentationRpcInterface } from \"@bentley/presentation-common/lib/presentation-common/PresentationRpcInterface\";\r\n\r\n// Setup logging immediately to pick up any logging during IModelHost.startup()\r\n// Logger.initializeToConsole();\r\n// Logger.setLevelDefault(LogLevel.Warning);\r\n// Logger.setLevel(AppLoggerCategory.Backend, LogLevel.Info);\r\n/**\r\n * Returns a list of RPCs supported by this application\r\n */\r\nexport function getSupportedRpcs(): RpcInterfaceDefinition[] {\r\n  return [\r\n    IModelReadRpcInterface,\r\n    IModelTileRpcInterface,\r\n    PresentationRpcInterface,\r\n    SnapshotIModelRpcInterface,\r\n  ];\r\n}\r\n(async () => {\r\n  try {\r\n    // Initialize iModelHost\r\n    await IModelHost.startup();\r\n\r\n    // Initialize Presentation\r\n    Presentation.initialize();\r\n\r\n    // Get platform-specific initialization function\r\n    let init: (rpcs: RpcInterfaceDefinition[]) => void;\r\n    init = (await import(\"./web/BackendServer\")).default;\r\n\r\n    // Get RPCs supported by this backend\r\n    const rpcs = getSupportedRpcs();\r\n\r\n    // Invoke platform-specific initialization\r\n    init(rpcs);\r\n  } catch (error) {\r\n    // Logger.logError(AppLoggerCategory.Backend, error);\r\n    process.exitCode = 1;\r\n  }\r\n})(); // tslint:disable-line:no-floating-promises\r\n"]}